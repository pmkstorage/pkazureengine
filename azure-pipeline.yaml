trigger:
  branches:
    include:
    - '*'

variables:
  serviceConnection: 'azureConnectionName'
  azureLocation: 'australiaeast'
  terraformWorkingDirectory: '$(System.DefaultWorkingDirectory)'
  terraformVersion: '0.12.25'

stages:
  - stage: TerraformContinuousIntegration
    displayName: Terraform Module CI
    jobs:
    - job: TerraformContinuousIntegration CI Job
      pool:
        vmImage: ubuntu-20.04
      steps:
      - task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-installer.TerraformInstaller@0
        displayName: 'Install Terraform'
        inputs:
          terraformVersion: $(terraformVersion)
      - task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-cli.TerraformCLI@0
        displayName: 'Run Terraform Init'
        inputs:
          command: init
          workingDirectory: $(terraformWorkingDirectory)
      - task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-cli.TerraformCLI@0
        displayName: 'Run Terraform Validate'
        inputs:
          command: validate
          workingDirectory: $(terraformWorkingDirectory)
      - task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-cli.TerraformCLI@0
        displayName: 'Run Terraform Plan'
        inputs:
          command: plan
          workingDirectory: $(terraformWorkingDirectory)
          environmentServiceName: $(serviceConnection)
          commandOptions: -var location=$(azureLocation)